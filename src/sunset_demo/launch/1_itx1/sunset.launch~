<launch>

    <!-- Define Robot's Machines -->

    <!-- itx1 startup (High Level: Navigation, HRI) -->
    <!-- roslaunch nodes on itx1 -->
    <include file="$(find robot_2dnav)/launch/itx1_robot_configuration.launch"/> <!-- start
 navigation --> -->
    <include file="$(find sunset_demo)/launch/1_itx1/usb_cams.launch"/>
   
    <!-- rosrun nodes on itx1 -->
    <node ns="aux_systems" pkg="web_video_server" type="web_video_server" name="web_video_server"
          respawn="true"/> <!-- server for streaming video to HRI devices -->
    <node ns="aux_systems" pkg="kinect_aux2" type="kinect_aux_node_mod" name="kinect_aux"
          respawn="false"/> <!-- server for streaming video to HRI devices -->

    <node ns="nri_system" pkg="websocket_server" type="ws_ros.py" name="ws_ros"
          respawn="false"/> <!-- server for HRI device comms -->

    <node ns="nri_system" pkg="nri" type="websocket_ROS_interface.py" name="ws_ros_interface"
          respawn="true"/> <!-- converts JSON to ROS messages -->
    <node ns="nri_system" pkg="nri" type="move_base_parameters_client.py" name="parameters_client"
          respawn="true"/> <!-- dynamically adjust move base parameters-->
    <node ns="nri_system" pkg="nri" type="joy_ROS_interface.py" name="joystick_interface"
          respawn="false"/> <!-- xbox controller interface -->
    <node ns="nri_system" pkg="nri" type="global_multiplexer.py" name="nri_multiplexer"
          respawn="false"/> <!-- multiplexer for device management -->

    <node ns="nav_interface" pkg="robot_router" type="robot_router.py" name="robot_router"
          respawn="false"> <!-- navigation system interface system -->
	<remap from="/nav_interface/move_base/status" to="/move_base/status"/>
        <remap from="/nav_interface/move_base/feedback" to="/move_base/feedback"/>
	<remap from="/nav_interface/move_base/result" to="/move_base/result"/>
	<remap from="/nav_interface/move_base/cancel" to="/move_base/cancel"/>
	<remap from="/nav_interface/move_base/goal" to="/move_base/goal"/>


    </node>
    <node ns="nav_interface" pkg="robot_router" type="location_saver.py" name="location_saver"
          respawn="false"/> <!-- location updater node-->

</launch>
