// Generated by gencpp from file template_sm/String.msg
// DO NOT EDIT!


#ifndef TEMPLATE_SM_MESSAGE_STRING_H
#define TEMPLATE_SM_MESSAGE_STRING_H

#include <ros/service_traits.h>


#include <template_sm/StringRequest.h>
#include <template_sm/StringResponse.h>


namespace template_sm
{

struct String
{

typedef StringRequest Request;
typedef StringResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct String
} // namespace template_sm


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::template_sm::String > {
  static const char* value()
  {
    return "b8f71fbc3d8ee368e453fca947ab59d1";
  }

  static const char* value(const ::template_sm::String&) { return value(); }
};

template<>
struct DataType< ::template_sm::String > {
  static const char* value()
  {
    return "template_sm/String";
  }

  static const char* value(const ::template_sm::String&) { return value(); }
};


// service_traits::MD5Sum< ::template_sm::StringRequest> should match 
// service_traits::MD5Sum< ::template_sm::String > 
template<>
struct MD5Sum< ::template_sm::StringRequest>
{
  static const char* value()
  {
    return MD5Sum< ::template_sm::String >::value();
  }
  static const char* value(const ::template_sm::StringRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::template_sm::StringRequest> should match 
// service_traits::DataType< ::template_sm::String > 
template<>
struct DataType< ::template_sm::StringRequest>
{
  static const char* value()
  {
    return DataType< ::template_sm::String >::value();
  }
  static const char* value(const ::template_sm::StringRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::template_sm::StringResponse> should match 
// service_traits::MD5Sum< ::template_sm::String > 
template<>
struct MD5Sum< ::template_sm::StringResponse>
{
  static const char* value()
  {
    return MD5Sum< ::template_sm::String >::value();
  }
  static const char* value(const ::template_sm::StringResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::template_sm::StringResponse> should match 
// service_traits::DataType< ::template_sm::String > 
template<>
struct DataType< ::template_sm::StringResponse>
{
  static const char* value()
  {
    return DataType< ::template_sm::String >::value();
  }
  static const char* value(const ::template_sm::StringResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // TEMPLATE_SM_MESSAGE_STRING_H
